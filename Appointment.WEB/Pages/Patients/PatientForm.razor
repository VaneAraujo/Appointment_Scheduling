@using CurrieTechnologies.Razor.SweetAlert2;
@using Appointment.Shared.Entities;
@using Microsoft.AspNetCore.Components.Forms;
@using Microsoft.AspNetCore.Components.Routing;
@inject NavigationManager navigationManager
@inject SweetAlertService swal
<h3>patientForm</h3>

<NavigationLock OnBeforeInternalNavigation="OnBeforeInternalNavigation"></NavigationLock>

<EditForm EditContext="editContext" OnValidSubmit="OnSubmit">

    <DataAnnotationsValidator />
    <div class="mb-3">
        <label>Paciente:</label>
        <div>
            <InputText class="form-control" @bind-Value="@Patient.Name" />
            <ValidationMessage For="@(() => Patient.Name)" />

            <button class="btn btn-success" @onclick="ReturnAction">Regresar</button>
        </div>
    </div>

    <button class="btn btn-primary" type="submit">Guardar Cambios</button>
</EditForm>

@code {

    private EditContext editContext = null!;

    protected override void OnInitialized()
    {
        editContext = new(Patient);
    }

    [EditorRequired]
    [Parameter]
    public Patient Patient { get; set; } = null!;

    [EditorRequired]
    [Parameter]
    public EventCallback OnValidSubmit { get; set; }

    [EditorRequired]
    [Parameter]
    public EventCallback ReturnAction { get; set; }

    public bool FormPostedSuccessfully { get; set; } = false;

    private async Task OnBeforeInternalNavigation(LocationChangingContext context)
    {
        var formWasEdited = editContext.IsModified();

        if (!formWasEdited)
        {
            return;
        }

        if (FormPostedSuccessfully)
        {
            return;
        }

        var result = await swal.FireAsync(new SweetAlertOptions
            {
                Title = "Confirmación",
                Text = "¿Está seguro de abandonar la página?(perderá los cambios..)",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true
            });

        var confirm = !string.IsNullOrEmpty(result.Value);

        if (confirm)
        {
            return;
        }

        context.PreventNavigation();
    }



}

